#!/usr/bin/env python

import os
import oursql
from optparse import OptionParser

def propersubset(a, b): return (a != b) and (a <= b)
def identity(a, b): return (a is not b) and (a == b)

def subsetgraph(data, sortfn):
    # sort by descending cardinality
    sets = sorted(data.items(), cmp=lambda a, b: cmp(len(b[1]), len(a[1])))

    subsets = []
    for x in sets:
        for y in sets:
            if sortfn(x[1], y[1]):
                subsets.append((x[0], y[0]))

    return subsets

def run():
    p = OptionParser()
    p.add_option('-u', '--user', dest='user', help='Username')
    p.add_option('-p', '--pass', dest='passwd', help='Password')
    p.add_option('-d', '--db', dest='db', help='Database')

    options, args = p.parse_args()

    db_conf = { 'user': options.user, 
                'passwd': options.passwd, 
                'db': options.db
                }
    db = oursql.connect(**db_conf)
    db.cursor().execute('set @@sql_mode = 4;')

    data2 = {}
    with db as c:
        c.execute('''select table_name, column_name from information_schema.COLUMNS where table_schema = '%s';''' % options.db)
        column_data = [ r for r in c.fetchall() ]

        def values_from_column(table, column):
            c.execute('''select "%s" from "%s";''' % (column, table))
            return c.fetchall()

        for table, column in column_data:
            data2[(table, column)] = set([ i[0] for i in values_from_column(table, column) ])

    print len(data2)

    print "equal sets:"
    for x in subsetgraph(data2, identity):
        print x

    print "proper subsets:"
    for a, b in subsetgraph(data2, propersubset):
        print a, b

if __name__ == '__main__':
    run()
